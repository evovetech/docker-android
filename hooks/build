#!/bin/bash

ROOT="$( cd "$( dirname "${DOCKERFILE_PATH}" )" && pwd )"
IMAGES="${ROOT}/images"
source ${ROOT}/env.sh

function main() {
  # Build base images
  build_base_images

  # Build main image
  echo "start main build image=${IMAGE_NAME}"
  docker build \
    --build-arg "GRADLE_VERSION=${GRADLE_VERSION}" \
    -t "${IMAGE_NAME}" \
    -f "${DOCKERFILE_PATH}" \
    "${ROOT}/context"

  echo "success!"
}

function build_base_images() {
  # Build base image
  build_image base latest

  # Build sdk image
  {
    build_image sdk latest
  } &
  sdk_job=$!
  echo "sdk_job=${sdk_job}"

  # Build gradle image
  {
    build_image gradle "${GRADLE_VERSION}" \
        --build-arg "GRADLE_VERSION=${GRADLE_VERSION}"
  } &
  gradle_job=$!
  echo "gradle_job=${gradle_job}"

  wait ${sdk_job}
  echo "sdk_job = success!"

  wait ${gradle_job}
  echo "gradle_job = success!"
}

function build_image() {
  local name="$1"
  local tag="$2"
  local args=(
    build
    "${@:3}"
    "${BUILD_ARGS[@]}"
    -t "evovetech/android-${name}:${tag}"
    "${IMAGES}/${name}"
  )

  # TODO: if debug
  local log_args=(
    '  $'
    docker
    "${args[@]}"
  )
  echo "${log_args[@]}"
  docker "${args[@]}"

  local st=$?
  if [[ $st -ne 0 ]]; then
    exit $st
  fi
}

# Build
main "$@"
